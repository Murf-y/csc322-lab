// Copyright (C) 1991-2014 Altera Corporation. All rights reserved.
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, the Altera Quartus II License Agreement,
// the Altera MegaCore Function License Agreement, or other 
// applicable license agreement, including, without limitation, 
// that your use is for the sole purpose of programming logic 
// devices manufactured by Altera and sold by Altera or its 
// authorized distributors.  Please refer to the applicable 
// agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus II 64-Bit"
// VERSION "Version 14.1.0 Build 186 12/03/2014 SJ Web Edition"

// DATE "04/11/2022 14:08:29"

// 
// Device: Altera EP4CGX15BF14C6 Package FBGA169
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module adder (
	sum,
	a,
	b,
	c,
	cout);
output 	sum;
input 	a;
input 	b;
input 	c;
output 	cout;

// Design Ports Information
// sum	=>  Location: PIN_D12,	 I/O Standard: 2.5 V,	 Current Strength: Default
// cout	=>  Location: PIN_B11,	 I/O Standard: 2.5 V,	 Current Strength: Default
// a	=>  Location: PIN_K8,	 I/O Standard: 2.5 V,	 Current Strength: Default
// b	=>  Location: PIN_A11,	 I/O Standard: 2.5 V,	 Current Strength: Default
// c	=>  Location: PIN_K9,	 I/O Standard: 2.5 V,	 Current Strength: Default


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \sum~output_o ;
wire \cout~output_o ;
wire \b~input_o ;
wire \c~input_o ;
wire \a~input_o ;
wire \inst2~0_combout ;
wire \inst6~0_combout ;


// Location: IOOBUF_X33_Y28_N9
cycloneiv_io_obuf \sum~output (
	.i(\inst2~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\sum~output_o ),
	.obar());
// synopsys translate_off
defparam \sum~output .bus_hold = "false";
defparam \sum~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X24_Y31_N2
cycloneiv_io_obuf \cout~output (
	.i(\inst6~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\cout~output_o ),
	.obar());
// synopsys translate_off
defparam \cout~output .bus_hold = "false";
defparam \cout~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOIBUF_X20_Y31_N1
cycloneiv_io_ibuf \b~input (
	.i(b),
	.ibar(gnd),
	.o(\b~input_o ));
// synopsys translate_off
defparam \b~input .bus_hold = "false";
defparam \b~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X22_Y0_N1
cycloneiv_io_ibuf \c~input (
	.i(c),
	.ibar(gnd),
	.o(\c~input_o ));
// synopsys translate_off
defparam \c~input .bus_hold = "false";
defparam \c~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X22_Y0_N8
cycloneiv_io_ibuf \a~input (
	.i(a),
	.ibar(gnd),
	.o(\a~input_o ));
// synopsys translate_off
defparam \a~input .bus_hold = "false";
defparam \a~input .simulate_z_as = "z";
// synopsys translate_on

// Location: LCCOMB_X26_Y15_N8
cycloneiv_lcell_comb \inst2~0 (
// Equation(s):
// \inst2~0_combout  = \b~input_o  $ (\c~input_o  $ (\a~input_o ))

	.dataa(gnd),
	.datab(\b~input_o ),
	.datac(\c~input_o ),
	.datad(\a~input_o ),
	.cin(gnd),
	.combout(\inst2~0_combout ),
	.cout());
// synopsys translate_off
defparam \inst2~0 .lut_mask = 16'hC33C;
defparam \inst2~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X26_Y15_N18
cycloneiv_lcell_comb \inst6~0 (
// Equation(s):
// \inst6~0_combout  = (\b~input_o  & ((\c~input_o ) # (\a~input_o ))) # (!\b~input_o  & (\c~input_o  & \a~input_o ))

	.dataa(gnd),
	.datab(\b~input_o ),
	.datac(\c~input_o ),
	.datad(\a~input_o ),
	.cin(gnd),
	.combout(\inst6~0_combout ),
	.cout());
// synopsys translate_off
defparam \inst6~0 .lut_mask = 16'hFCC0;
defparam \inst6~0 .sum_lutc_input = "datac";
// synopsys translate_on

assign sum = \sum~output_o ;

assign cout = \cout~output_o ;

endmodule
